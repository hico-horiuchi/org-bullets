(defun org-bullets-trance-from ()
  (interactive)
  (setq start-position (+ 1 (count-lines 1 (point))))
  (goto-char (point-min))
  (replace-regexp "^◎ " "* ")
  (goto-char (point-min))
  (replace-regexp "^○ " "** ")
  (goto-char (point-min))
  (replace-regexp "^● " "*** ")
  (goto-char (point-min))
  (replace-regexp "^・ " "**** ")
  (goto-line start-position))

(defun org-bullets-trance-to ()
  (interactive)
  (setq start-position (+ 1 (count-lines 1 (point))))
  (goto-char (point-min))
  (replace-regexp "^\\* " "◎ ")
  (goto-char (point-min))
  (replace-regexp "^\\*\\* " "○ ")
  (goto-char (point-min))
  (replace-regexp "^\\*\\*\\* " "● ")
  (goto-char (point-min))
  (replace-regexp "^\\*\\*\\*\\* " "・ ")
  (goto-line start-position))

(defun org-bullets-trance-automatic ()
  (interactive)
  (setq start-automatic-position (+ 1 (count-lines 1 (point))))
  (goto-char (point-min))
  (if (re-search-forward "^[◎○●・] " nil t)
      (org-bullets-trance-from)
      (org-bullets-trance-to))
  (goto-line start-automatic-position))

(defun org-bullets-import (import-file)
  (interactive "FImport file: ")
  (add-hook 'find-file-hook 'org-bullets-trance-from)
  (find-file import-file)
  (remove-hook 'find-file-hook 'org-bullets-trance-from)
  (org-mode)
  (org-bullets-mode))

(defun org-bullets-export (export-file)
  (interactive "FExport file: ")
  (show-all)
  (add-hook 'before-save-hook 'org-bullets-trance-to)
  (write-file export-file)
  (remove-hook 'before-save-hook 'org-bullets-trance-to)
  (text-mode))

(provide 'org-bullets-trance)
