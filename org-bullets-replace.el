(defun org-bullets-to-circle ()
  (interactive)
  (setq start-position (+ 1 (count-lines 1 (point))))
  (goto-char (point-min))
  (replace-regexp "^◎ " "* ")
  (goto-char (point-min))
  (replace-regexp "^○ " "** ")
  (goto-char (point-min))
  (replace-regexp "^● " "*** ")
  (goto-char (point-min))
  (replace-regexp "^・ " "**** ")
  (goto-line start-position))

(defun circle-to-org-bullets ()
  (interactive)
  (setq start-position (+ 1 (count-lines 1 (point))))
  (goto-char (point-min))
  (replace-regexp "^\\* " "◎ ")
  (goto-char (point-min))
  (replace-regexp "^\\*\\* " "○ ")
  (goto-char (point-min))
  (replace-regexp "^\\*\\*\\* " "● ")
  (goto-char (point-min))
  (replace-regexp "^\\*\\*\\*\\* " "・ ")
  (goto-line start-position))

(defun org-bullets-replace ()
  (interactive)
  (setq start-automatic-position (+ 1 (count-lines 1 (point))))
  (goto-char (point-min))
  (if (re-search-forward "^[◎○●・]" nil t)
      (circle-to-org-bullets)
      (org-bullets-to-circle))
  (goto-line start-automatic-position))

(provide 'org-bullets-replace)
